### SearchParameters configuration parameters

default_search_window_width             5
# The width of the search window when the user supplies the center position of 
# the search window (WINDOW integer). Additionally, the width of the 
# search window when FABIAN calculates the optimal search window (WINDOW _ 
# [integer] [integer]).
 
gap_width_tolerance                     1
# The tolerance to the gap widths supplied in motif definitions. 
# For example, when a gap width 10 is supplied and gap_width_tolerance is 2, all
# gap widths between 8 and 12 nucleotides are tested.

dinucleotides_for_pfm_pwm_conversion    true
# Whether to use a dinucleotide distribution (32 conditional probabilities) 
# instead of a mononucleotide distribution (4 probabilities) to convert 
# position frequency matrices supplied by the user to position weight matrices. 
# The distributions are always calculated from all nucleotides of all input 
# sequences.
# Frequency matrices contain integer counts, weight matrices contain decimal 
# scores. Frequency matrices are often derived from biochemical experiments, 
# weight matrices are used for scoring motifs.

dinucleotides_for_random_occurrence     false
# Whether to use a dinucleotide distribution (32 conditional probabilities) 
# instead of a mononucleotide distribution (4 probabilities) to calculate the 
# expected occurrence frequency of an element in random DNA. 
# The distributions are always calculated from all nucleotides of all input 
# sequences.
# The expected occurrence frequency is calculated with keyword RANDOM. 
# Additionally, the calculation of the optimal position weight matrix cutoff is 
# based on the expected occurrence frequency (PWM _ [integer] [string]). 
# Be careful: The calculation may be intractable when 
# dinucleotides_for_random_occurrence and precise_random_occurrence are both set
# to true.

precise_random_occurrence               true
# Whether to calculate the precise expected occurrence frequency or an 
# approximation. Calculating an approximation can be faster. 
# The expected occurrence frequency is calculated with keyword RANDOM. 
# Additionally, the calculation of the optimal position weight matrix cutoff is 
# based on the expected occurrence frequency (PWM _ [integer] [string]). 
# Be careful: The calculation may be intractable when 
# dinucleotides_for_random_occurrence and precise_random_occurrence are both set
# to true.

pwm_find_cutoff_parameters              { 0.6, 0.95, 0.001 }
# The three parameters are used to calculate the optimal position weight matrix 
# cutoff (PWM _ [integer] [string]). The first two parameters 
# determine the interval in which the optimal cutoff is searched. The third 
# parameter determines search precision. 
# For example, when pwm_find_cutoff_parameters is { 0.6, 0.95, 0.001 }, the 
# optimal cutoff is searched between 0.600 and 0.950 with precision 0.001.

cage_tags_in_window_threshold           10
# When searching for regions with a high or low concentration of CAGE tags, 
# regions with in total fewer cage tags than this threshold are always treated 
# like they do not meet the cutoff.

positiongraph_file_name                 "positiongraph.txt"

### GlobalParameters configuration parameters

fasta_output_line_width                 60
# The number of nucleotides per line of FASTA files created from BED and GFF 
# input files. The number of nucleotides per line when visualizing DBTSS input 
# files. 

fasta_default_extraction_window         { -499, 200 }
# The default nucleotides window extracted from BED and GFF input files 
# relative to the transcription start site at position +1. 
# For example, when fasta_default_extraction_window is { -499, 200 } by default 
# 500 nucleotides before the transcription start site and 200 nucleotides after 
# and including the transcription start site are extracted. The user can 
# override the default extraction window with --fawindow.
        
fasta_compact_header                    false
# If true, the header lines in FASTA files created from BED and GFF input files 
# show just the most important information from their corresponding BED or GFF 
# annotations. 
# If false, the entire BED or GFF annotations are duplicated to header lines 
# in FASTA files.

output_directory_name                   "output"
# The name of a directory where FABIAN saves search results (the logfile and 
# files generated with --output, --splitinput and --positiongraph).

logfile_name                            "found_elements.txt"
# The name of the file that lists all elements found during the last search.

logfile_excel_compatibility             false
# TODO

output_filename                         "results.txt"
# The default name of the file to which search results are written, if not to 
# the standard output (--output). The user can override the default name 
# by supplying a filename after --output.

verbose_default                         2
# The default verbosity of the search results. 0 prints the least details. 4 
# prints the most details. The user can override the default verbosity with 
# --verbose.

supported_gff_feature_names             "transcript, tRNA, miRNA"
# A comma-separated list that must contain all the names of features that should
# be extracted from GFF input files. The feature name is in column three in the 
# GFF specification. GFF annotations with feature names not in this list are not
# extracted and its sequences not searched. 
# For example, when supported_gff_feature_names is "transcript, tRNA, miRNA" 
# only the second annotation below is extracted and its sequence seached: 
# chr1	HAVANA	gene	29554	31109	.	+	.	gene_id "ENSG00000243485.4"; ...
# chr1	HAVANA	transcript	29554	31097	.	+	.	gene_id "ENSG00000243485.4"; ...
# chr1	HAVANA	exon	29554	30039	.	+	.	gene_id "ENSG00000243485.4"; ...
# chr1	HAVANA	exon	30564	30667	.	+	.	gene_id "ENSG00000243485.4"; ...

vcf_dp_min_value                        10
# VCF entries with a cummulative total depth count (DP, INFO field) below this 
# value will be skipped. A non-positive value will extract all entries.

vcf_skip_bad_entries                    1
# 0 aborts the application if incorrectly aligned VCF entries, SVs or breakends 
# are encountered. 1 skips these entries and prints their location. 2 skips 
# these entries silently.

binomial_distribution_p                 true
# If true, a binomial distribution is used to calculate p-values for search 
# results with --significance and --random. If false, a normal distribution is 
# used.

### Visualization configuration parameters

number_of_sequences_to_print            5
# The number of sequences visualized together.
